
//команда препроцессора - нужна для того, 
//чтобы файл не зацикливался (не включал сам себя)
#pragma once 




//класс многочлена
class Polynom
{
public:

	//конструктор по умолчанию
	//инициализирует многочлен со степенью = 0 и коэффициентом = 0
	Polynom();

	//конструктор с параметрами
	//инициализирует многочлен со степенью degree и коэффициентами из coefficients
	//args:
	//	int degree - степень многочлена (не должна быть отрицательной)
	//	double * coefficients - массив коэффициентов (не должен быть nullptr, должен быть по размеру на 1 больше, чем degree)
	Polynom(int degree, double* coefficients);

	//конструктор копирования
	//копирует поля и содержимое объекта polynom и помещает это в текущий объект
	//args:
	//	const Polynom& polynom - многочлен, копию которого создаем
	Polynom(const Polynom& polynom);

	//деструктор
	//очищает память от массива коэффициентов перед уничтожением объекта
	~Polynom();



	//геттеры - нужны для получения полей класса

	//получение степени многочлена
	//возвращает степень многочлена
	//return - значение _degree
	int getDegree();

	//получение коэффициентов многочлена
	//возвращает массив коэффициентов многочлена
	//return - массив коэффициентов многочлена
	double* getCoefficients();

	//получение коэффициента при степени degree
	//возвращает коэффициент у степени index
	//args:
	//	degree - степень, коэффициент при которой нужно получить (не может быть отрицательной или превышать _degree+1)
	//return - коэффициент при степени degree
	double getCoefficient(int degree);



	//сеттеры - нужны для установки полей класса
	
	//изменение степени многочлена
	//изменяет степень многочлена, при этом все коэффициенты зануляются
	//args:
	//	int degree - новая степень многочлена (не должна быть отрицательной)
	void setDegree(int degree);

	//изменение всех коэффициентов многочлена
	//изменяет коэффициенты многочлена на те, которые находятся в coefficients
	//args:
	//	double * coefficients - массив новых коэффициентов (не должен быть равен nullptr, должен быть по размеру на 1 больше, чем _degree)
	void setCoefficients(double* coefficients);

	//изменение коэффициента при степени degree
	//изменяет коэффициент при степени degree на coefficient
	//args:
	//	double coefficient - новое значение коэффициента
	//	int degree - степень, при которой меняется коэффициент (не должна превышать _degree и не должна быть отрицательной)
	void setCoefficient(double coefficient, int degree);



	//вывод на консоль
	//выводит на консоль многочлен в математическом формате
	void show();

	//вычислить значение многочлена
	//вычисляет значение многочлена со значением х
	//args:
	//	x - значение с которым нужно вычислить значение многочлена
	//return - значение многочлена
	double compute(double x);



private:

	//коэффициенты расположены от меньшей степени к большей
	//т.е. под coefficients[0] расположен коэффициент при х^0
	//также, массив коэффициентов содержит _degree+1 элементов
	//т.к. _degree - максимальная степень многочлена

	//степень многочлена
	int _degree;

	//коэффициенты при степенях многочлена
	double* _coefficients;


};

